unit uAbstractVendas;

interface

type
  TAbstarctVendas = Class
    private
      FValor: String;
      FDescricao: String;
      FIDProduto: Integer;
      FValorTotal: String;
      FIDCliente: Integer;
      FNome: String;
      procedure SetDescricao(const Value: String);
      procedure SetIDCliente(const Value: Integer);
      procedure SetIDProduto(const Value: Integer);
      procedure SetNome(const Value: String);
      procedure SetValor(const Value: String);
      procedure SetValorTotal(const Value: String);
    public
      property IDCliente: Integer read FIDCliente write SetIDCliente;
      property Nome: String read FNome write SetNome;
      property IDProduto: Integer read FIDProduto write SetIDProduto;
      property Descricao: String read FDescricao write SetDescricao;
      property Valor: String read FValor write SetValor;
      property ValorTotal: String read FValorTotal write SetValorTotal;

  End;

implementation

{ TAbstarctVendas }

procedure TAbstarctVendas.SetDescricao(const Value: String);
begin
  FDescricao := Value;
end;

procedure TAbstarctVendas.SetIDCliente(const Value: Integer);
begin
  FIDCliente := Value;
end;

procedure TAbstarctVendas.SetIDProduto(const Value: Integer);
begin
  FIDProduto := Value;
end;

procedure TAbstarctVendas.SetNome(const Value: String);
begin
  FNome := Value;
end;

procedure TAbstarctVendas.SetValor(const Value: String);
begin
  FValor := Value;
end;

procedure TAbstarctVendas.SetValorTotal(const Value: String);
begin
  FValorTotal := Value;
end;

end.
