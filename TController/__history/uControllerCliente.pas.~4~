unit uControllerCliente;

interface

uses
  uCliente;
type

  TControllerCliente = Class (TClienteAbstract)
    private
    public
      constructor create;
      destructor destroy; override;
      procedure CarregarCodigoCliente(iDCliente: Integer);
      function CarregarCliente(iCliente: TClienteAbstract): Boolean;
      function InserirRegistoCliente(iCliente: TClienteAbstract; out sErro: String): Boolean;
      function AlterarCliente(iCliente: TClienteAbstract; out sErro: String): Boolean;
      function ExcluirCliente(iCliente: TClienteAbstract; out sErro: String): Boolean;
  End;

implementation

uses
  udmClientes, System.SysUtils;

{ TControllerCliente }

function TControllerCliente.AlterarCliente(iCliente: TClienteAbstract;
  out sErro: String): Boolean;
begin
  Result := dmClientes.AlterarCliente(iCliente,sErro);
end;

function TControllerCliente.CarregarCliente(
  iCliente: TClienteAbstract): Boolean;
begin
  Result := dmClientes.CarregarCliente(iCliente);
end;

procedure TControllerCliente.CarregarCodigoCliente(iDCliente: Integer);
begin
   dmClientes.CarregarCodigoCliente(iDCliente);
end;

constructor TControllerCliente.create;
begin
  dmClientes := TdmClientes.Create(nil);
end;

destructor TControllerCliente.destroy;
begin
   freeAndNil(dmClientes);
  inherited;
end;

function TControllerCliente.ExcluirCliente(iCliente: TClienteAbstract;
  out sErro: String): Boolean;
begin
  Result := dmClientes.ExcluirCliente(iCliente, sErro);
end;

function TControllerCliente.InserirRegistoCliente(iCliente: TClienteAbstract;
  out sErro: String): Boolean;
begin
  Result := dmClientes.InserirRegistoCliente(iCliente, sErro);
end;

end.
