unit udmProdutos;

interface

uses
  System.SysUtils, System.Classes, Datasnap.DBClient, Datasnap.Provider,
  Data.Win.ADODB, Data.DB, uAbstractProduto;

type
  TdmProdutos = class(TDataModule)
    qrProdutosInsert: TADOQuery;
    dsPesquisar: TADODataSet;
    dspPesquisar: TDataSetProvider;
    cdsPesquisar: TClientDataSet;
    qrProdExcluir: TADOQuery;
    qrProdUpdate: TADOQuery;
    cdsPesquisarIDPRODUTOS: TAutoIncField;
    cdsPesquisarDESCRICAO: TStringField;
    cdsPesquisarQUANTIDADE: TBCDField;
    cdsPesquisarVALOR: TBCDField;
  private
    { Private declarations }
  public
    { Public declarations }
    function InserirRegistoProduto(iProduto: TAbstractProdutos; out sErro: String): Boolean;
  end;

var
  dmProdutos: TdmProdutos;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses uDmConexao;

{$R *.dfm}

{ TdmProdutos }

function TdmProdutos.InserirRegistoProduto(iProduto: TAbstractProdutos;
  out sErro: String): Boolean;
begin
  with qrProdutosInsert do
  begin
    parameters.ParamByName('DESCRICAO').Value := iProduto.Descricao;
    parameters.ParamByName('QUANTIDADE').Value  := iProduto.Quantidade;
    parameters.ParamByName('VALOR').Value := iProduto.Valor;
    try
      execSQL;
      Result := True;
      except
        on E: Exception do
        begin
          sErro := 'Ocorreu um erro ao gravar o produto!' + sLineBreak + E.Message;
          Result := False;
        end;

    end;
  end;
end;

end.
